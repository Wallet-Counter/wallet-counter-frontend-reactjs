{"version":3,"sources":["utils/connector.js","components/Loader.js","utils/contracts-details.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["injected","InjectedConnector","supportedChainIds","web3","Web3","givenProvider","LoadingSpinner","className","wallet_counter_contract_address","wallet_counter_contract_abi","Home","useWeb3React","active","account","activate","library","connector","deactivate","useState","walletCounter","setWalletCounter","totalValue","setTotalValue","noOfWallets","setNoOfWallets","inputValue","setInputValue","show","setShow","errorMessage","setErrorMessage","loader","setLoader","transactionUrl","setTransactionUrl","transactionHash","setTransactionHash","handleShow","handleClose","a","window","ethereum","networkVersion","localStorage","setItem","console","log","ex","walletCounterContract","eth","Contract","getTotalValueAndNoOfWallets","methods","getTotalValueAndWalletCounts","call","result","valueInEther","utils","fromWei","parseFloat","valueInWei","toWei","enterNumber","estimateGas","from","gasLimit","bufferedGasLimit","Math","round","Number","send","on","hash","transHash","error","message","useEffect","initializeContracts","substring","length","onClick","connectWallet","disconnectWallet","class","id","action","type","value","placeholder","onChange","event","re","RegExp","target","test","addNumber","Modal","onHide","Header","closeButton","Title","Body","href","rel","Footer","Button","variant","getLibrary","provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b19dce9a.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport Web3 from \"web3\";\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [80001],\r\n})\r\n\r\nexport const web3 = new Web3(Web3.givenProvider || \"https://rpc-endpoints.superfluid.dev/mumbai\");","import React from \"react\";\r\nimport \"../styles/spinner.css\";\r\n\r\nexport default function LoadingSpinner() {\r\n    return (\r\n        <div className=\"spinner-container\">\r\n            <div className=\"loading-spinner\">\r\n            </div>\r\n        </div>\r\n    );\r\n}","export const wallet_counter_contract_address = \"0x39A29a015dd54B28Ef290697BdB269d2E5110CCB\";\r\n\r\nexport const wallet_counter_contract_abi = [\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"walletAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"numberEntered\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"NumberEntered\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"_numberEntered\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"enterNumber\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getTotalValueAndWalletCounts\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }\r\n];\r\n","import { injected, web3 } from '../utils/connector';\r\nimport { useWeb3React } from \"@web3-react/core\"\r\nimport { useEffect, useState } from \"react\";\r\nimport React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport LoadingSpinner from \"./Loader\";\r\nimport { wallet_counter_contract_abi, wallet_counter_contract_address } from \"../utils/contracts-details\";\r\n\r\nexport function Home() {\r\n\r\n    const { active, account, library, connector, activate, deactivate } = useWeb3React();\r\n\r\n    const [walletCounter, setWalletCounter] = useState();\r\n    const [totalValue, setTotalValue] = useState(\"0\");\r\n    const [noOfWallets, setNoOfWallets] = useState(\"0\");\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [loader, setLoader] = useState(false);\r\n    const [transactionUrl, setTransactionUrl] = useState(null);\r\n    const [transactionHash, setTransactionHash] = useState(\"\");\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setTransactionHash(\"\");\r\n        setTransactionUrl(null);\r\n    };\r\n\r\n    async function connectWallet() {\r\n        try {\r\n            await activate(injected);\r\n            if (window.ethereum.networkVersion !== \"80001\") {\r\n                handleShow();\r\n                setErrorMessage(\"Please connect to Mumbai matic network in your metamask!\");\r\n            } else {\r\n                localStorage.setItem('isWalletConnected', true);\r\n            }\r\n        } catch (ex) {\r\n            console.log(\"err\", ex);\r\n        }\r\n    }\r\n\r\n    async function disconnectWallet() {\r\n        try {\r\n            deactivate()\r\n            localStorage.setItem('isWalletConnected', false);\r\n            setTotalValue(0);\r\n            setNoOfWallets(0);\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n    }\r\n\r\n    async function initializeContracts() {\r\n        const walletCounterContract = new web3.eth.Contract(wallet_counter_contract_abi, wallet_counter_contract_address);\r\n        setWalletCounter(walletCounterContract);\r\n    }\r\n\r\n    async function getTotalValueAndNoOfWallets() {\r\n        const result = await walletCounter.methods.getTotalValueAndWalletCounts().call();\r\n        const valueInEther = web3.utils.fromWei(result[0], \"mwei\");\r\n        setTotalValue(valueInEther);\r\n        setNoOfWallets(result[1]);\r\n    }\r\n\r\n    function handleChange(event) {\r\n        const re = new RegExp(/^[-]?\\d+\\.?\\d{0,6}$/);\r\n        if (event.target.value === \"\" || re.test(event.target.value)) {\r\n            setInputValue(event.target.value);\r\n        }\r\n    }\r\n\r\n    async function addNumber() {\r\n        setErrorMessage(\"Transaction in progress!\");\r\n        handleShow();\r\n        if (!active) {\r\n            setErrorMessage(\"Please connect to Mumbai matic network in your metamask!\");\r\n            return;\r\n        } else if (!parseFloat(inputValue)) {\r\n            setErrorMessage(\"Please enter valid number!\");\r\n            return;\r\n        }\r\n        try {\r\n            let transHash;\r\n            setLoader(true);\r\n            const valueInWei = web3.utils.toWei(inputValue, \"mwei\");\r\n\r\n            const gasLimit = await walletCounter.methods\r\n                .enterNumber(valueInWei)\r\n                .estimateGas({ from: account });\r\n\r\n            const bufferedGasLimit = Math.round(\r\n                Number(gasLimit) + Number(gasLimit) * Number(0.2)\r\n            );\r\n\r\n            await walletCounter.methods\r\n                .enterNumber(valueInWei)\r\n                .send({\r\n                    from: account,\r\n                    gasLimit: bufferedGasLimit\r\n                })\r\n                .on(\"transactionHash\", (hash) => {\r\n                    transHash = hash;\r\n                    setTransactionHash(hash);\r\n                    setErrorMessage(\"Transaction hash generated : \" + hash);\r\n                })\r\n                .on(\"receipt\", async () => {\r\n                    setTransactionUrl(\"https://mumbai.polygonscan.com/tx/\" + transHash);\r\n                    setErrorMessage(\"Transaction successful!\");\r\n                    setInputValue(\"\");\r\n                    await getTotalValueAndNoOfWallets();\r\n                    setLoader(false);\r\n                })\r\n                .on(\"error\", (error) => {\r\n                    setErrorMessage(error.message);\r\n                    setLoader(false);\r\n                });\r\n\r\n        } catch (error) {\r\n            setErrorMessage(error.message);\r\n            setLoader(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (active && web3) {\r\n            initializeContracts();\r\n        } else {\r\n            setTotalValue(0);\r\n            setNoOfWallets(0);\r\n        }\r\n    }, [account, web3]);\r\n\r\n    useEffect(() => {\r\n        if (walletCounter && active) {\r\n            getTotalValueAndNoOfWallets();\r\n        }\r\n    }, [walletCounter, active]);\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"App-header\">\r\n                <div className='row'>\r\n                    <div className='col-7'>\r\n                        {active ? <span className='nav-welcome-msg'>\r\n                            Welcome to Wallet Counter App\r\n                        </span> : <></>}\r\n                    </div>\r\n                    <div className='col-5 btn-container'>\r\n\r\n                        {active ? <button className='address'>{account.substring(0, 10)}...{account.substring(account.length - 10, account.length)}</button> : <></>}\r\n\r\n                        {!active ? <button className='connect-btn' onClick={() => connectWallet()}>Connect</button> : <></>}\r\n\r\n                        {active ?\r\n                            <button className='connect-btn' onClick={() => disconnectWallet()}>Disconnect</button>\r\n                            : <></>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='mt-3 mb-5' >\r\n\r\n                <div class=\"container\" id=\"container\">\r\n                    <div class=\"form-container sign-in-container\">\r\n                        <form action=''>\r\n                            <h3>Enter value</h3>\r\n                            <input type=\"number\" value={inputValue} placeholder=\"12\" onChange={handleChange} />\r\n                            <br />\r\n                            <button type='button'\r\n                                onClick={() => addNumber()} >\r\n                                Submit\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                    <div class=\"overlay-container\">\r\n                        <div class=\"overlay\">\r\n                            <div class=\"overlay-panel overlay-right\">\r\n                                <h3>Total No. of Wallets</h3>\r\n                                <button class=\"ghost\" id=\"signUp\">{noOfWallets}</button>\r\n                                <br />\r\n                                <h3>Total Value</h3>\r\n                                <button class=\"ghost\" id=\"signUp\">{totalValue}</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Message</Modal.Title>\r\n                </Modal.Header>\r\n                {loader ? (<LoadingSpinner />) : (<></>)}\r\n                <Modal.Body>\r\n                    {errorMessage}\r\n                    {transactionUrl ? <a href={transactionUrl} target='_blank' rel='noopener noreferrer'> https://mumbai.polygonscan.com/tx/{transactionHash} </a> : <></>}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import './App.css';\nimport Web3 from 'web3';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { Home } from \"./components/Home\";\n\n\nfunction getLibrary(provider) {\n  return new Web3(provider);\n}\n\nfunction App() {\n\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <div className=\"App\">\n        <header >\n          <Home></Home>\n        </header>\n      </div>\n    </Web3ReactProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}